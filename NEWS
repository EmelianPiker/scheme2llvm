Improve speed of compiled code. 
  For compiling its own source code, the self compiled compiler is about 100x slower than Chicken Scheme compiled
  compiler. Should not introduce too much additional code/decrease readability.
  
  Fixed by switching from llvm-as to opt, decrease time for self compile from 21s to 7s
  For comparison, compiling with csi takes 0.7s 

Improve naming of LLVM functions by including scheme function name
  use function<id>-<scheme function name> in IR instead of function<id>

Implement tail call optimization
  use fastcc calling convention

Support latest LLVM IR
  upgrade output of compiler from LLVM IR 1.x to LLVM IR 2.x
  upgrade output of compiler from LLVM IR 2.x to LLVM IR 3.6
  upgrade output of compiler from LLVM IR 3.6 to LLVM IR 3.7

Add support for \n and \t in bootstrap read-string \n and \t
  LLVM IR generated by bootstrapped compiler is not exactly the same as
  interpreted compiler as bootstrap read-string does not interpret \n correctly

Add support for garbage collection using libgc
  switch from malloc to libgc's GC_malloc
  change representation from i32 to i64 as libgc is scanning 64bit pointers
  change to regular pointers as libgc does not support tagged pointers
