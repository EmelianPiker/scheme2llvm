Makefile makes use of the following programs:
  Required:
    llvm 3.x
    clang 3.x
  Optional:
    gawk
    csi - Chicken Scheme interpreter
    csc - Chicken Scheme compiler



Open issues
===========
Open issue: Rewrite parts of the compiler to remove set!

Open issue: Document the subset of Scheme supported

Open issue: Reduce repetition in the code base

Open issue: Difficult to interact with the system without a REPL
  Todo: Add a basic REPL

Open issue: Improve speed of compiled code. For compiling its own source code,
the self compiled compiler is about 100x slower than Chicken Scheme compiled
compiler. Should not introduce too much additional code/decrease readability.
  Done: switch from llvm-as to opt, decrease time for self compile from 21s to 7s



Resolved issues in reverse chronological order
==============================================
Resolved issue: Output readable function names instead of function54 
  Done: function name in IR is function<id>-<variable name>

Resolved issue: Leverage LLVM's tail call optimization
  Done: use fastcc calling convention

Resolved issue: Output is LLVM IR 1.x, need to use old versions of LLVM
toolchain.  Latest version of the IR is LLVm IR 3.x
  Done: upgrade output of compiler from LLVM IR 1.x to LLVM IR 2.x
  Done: upgrade output of compiler from LLVM IR 2.x to LLVM IR 3.x

Resolved issue: LLVM IR generated by bootstrapped compiler is not exactly the
same as interpreted compiler as bootstrap read-string does not interpret \n
correctly
  Solution: read-string now converts \n and \t to newline and tab respectively

Resolved issue: libgc still fails as libgc is scanning 64bit points but we
cast pointers to 32bits.
  Solution: Change representation from uint to ulong. Works!

Resolved issue: libgc does not support tagged pointer, need to change
representation to regular pointers if we want to use libgc.
  Solution: Change to regular pointers.

Resolved issue: Compiler uses too much memory
  "make issue/test-too-much-memory.1.ll" fails 
  "/usr/bin/time -v make test/test-closure.1.ll" shows maximum resident set as
  1108628kb
  Solution: switch from malloc bytecode to libgc's GC_malloc
